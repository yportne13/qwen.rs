name: rust

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  dependencies:
    name: Build dependencies
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Create global variables
        id: version
        run: echo "::set-output name=version::$(git rev-parse --short HEAD)"

  release:
    name: "Create Github tag/pre-release"
    runs-on: ubuntu-latest
    needs: dependencies
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Github pre-release (${{ needs.dependencies.outputs.version }})
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}-${{ needs.dependencies.outputs.version }}
          release_name: Version ${{ github.run_number }} (${{ needs.dependencies.outputs.version }})
          draft: false
          prerelease: false

  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    needs: [dependencies, release]

    steps:          
    - uses: actions/checkout@v3
    - name: Build
      run: |
        cargo build --release
        cargo build --release --example convert_ggml
        cargo build --release --example convert_ggml_int4

    - name: macos-latest
      if: matrix.platform == 'macos-latest'
      uses: actions/checkout@v3
      with:
        run: cargo build --release --target=aarch64-apple-darwin

    - name: Upload exe file
      uses: actions/upload-artifact@v3
      with:
        name: qwen-rs
        path: |
          target\release\*.exe
          target\release\examples\*.exe
          target/release/qwen-rs
          target/release/examples/convert_ggml
          target/release/examples/convert_ggml_int4
          target/release/qwen_rs
          target/aarch64-apple-darwin/release/qwen_rs
          target/aarch64-apple-darwin/release/examples/convert_ggml
          target/aarch64-apple-darwin/release/examples/convert_ggml_int4

    - name: macos-latest
      if: matrix.platform == 'macos-latest'
      uses: actions/upload-artifact@v3
      with:
        name: qwen-rs-macos
        path: |
          target/release/qwen-rs
          target/release/examples/convert_ggml
          target/release/examples/convert_ggml_int4
          target/release/qwen_rs
          target/aarch64_apple_darwin/release/qwen_rs
          target/aarch64_apple_darwin/release/examples/convert_ggml
          target/aarch64_apple_darwin/release/examples/convert_ggml_int4

    - name: Upload release assets windows
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: target\release\qwen-rs.exe
        asset_name: qwen-rs.exe
        asset_content_type: application/vnd.microsoft.portable-executable

    - name: Upload convert ggml windows
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: target\release\examples\convert_ggml.exe
        asset_name: convert_ggml.exe
        asset_content_type: application/vnd.microsoft.portable-executable

    - name: Upload convert ggml int4 windows
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: target\release\examples\convert_ggml_int4.exe
        asset_name: convert_ggml_int4.exe
        asset_content_type: application/vnd.microsoft.portable-executable

    - name: Upload release assets linux
      if: matrix.platform == 'ubuntu-20.04'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: target/release/qwen-rs
        asset_name: qwen-rs_ubuntu
        asset_content_type: application/octet-stream

    - name: Upload convert ggml linux
      if: matrix.platform == 'ubuntu-20.04'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: target/release/examples/convert_ggml
        asset_name: convert_ggml_ubuntu
        asset_content_type: application/octet-stream

    - name: Upload convert ggml int4 linux
      if: matrix.platform == 'ubuntu-20.04'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: target/release/examples/convert_ggml_int4
        asset_name: convert_ggml_int4_ubuntu
        asset_content_type: application/octet-stream

    - name: Upload release assets mac
      if: matrix.platform == 'macos-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: target/release/qwen_rs
        asset_name: qwen_rs_mac
        asset_content_type: application/octet-stream

    - name: Upload convert ggml mac
      if: matrix.platform == 'macos-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: target/release/examples/convert_ggml
        asset_name: convert_ggml_mac
        asset_content_type: application/octet-stream

    - name: Upload release assets mac_aarch64
      if: matrix.platform == 'macos-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: target/aarch64-apple-darwin/release/qwen_rs
        asset_name: qwen-rs_mac_aarch64
        asset_content_type: application/octet-stream

    - name: Upload convert ggml mac_aarch64
      if: matrix.platform == 'macos-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: target/aarch64-apple-darwin/release/examples/convert_ggml
        asset_name: convert_ggml_mac_aarch64
        asset_content_type: application/octet-stream